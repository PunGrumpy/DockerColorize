name: Go

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published, created]

permissions:
  contents: write
  packages: write
  pull-requests: write
  checks: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: ^1.22
      - name: Lint
        uses: golangci/golangci-lint-action@v6
      - name: Build
        run: make build
      - name: Coverage
        run: go test -race -coverprofile=coverage.out -covermode=atomic -tags test ./...
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: bin/*

  publish:
    needs: build
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Please Release
        id: pleaes-release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: 'go'
      - name: Download Artifact
        if: steps.pleaes-release.outputs.releases_created
        uses: actions/download-artifact@v4
        with:
          name: build
          path: bin/
      - name: Update Version
        if: steps.pleaes-release.outputs.releases_created
        run: |
          echo "VERSION=${{ steps.pleaes-release.outputs.major }}.${{ steps.pleaes-release.outputs.minor }}.${{ steps.pleaes-release.outputs.patch }}" >> $GITHUB_ENV
          echo "${{ env.VERSION }}" > ".version"
          sed -i "s/Ver = \".*\"/Ver = \"${{ env.VERSION }}\"/g" internal/app/const.go
