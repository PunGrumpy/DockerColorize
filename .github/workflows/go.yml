name: Go

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published
      - created

permissions:
  contents: write
  packages: write
  pull-requests: write
  checks: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: ^1.22
      - name: Lint
        uses: golangci/golangci-lint-action@v6
      - name: Build
        run: make build
      - name: Coverage
        run: go test -race -coverprofile=coverage.out -covermode=atomic -tags test ./...
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: bin/*

  publish:
    needs: build
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: 'go'
      - name: Download Artifact
        if: ${{ steps.release.outputs.releases_created }}
        uses: actions/download-artifact@v4
        with:
          name: build
          path: bin/
      - name: Update Version
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          echo "${{steps.release.outputs.tag_name }}" > .version
          sed -i "s/Ver = \".*\"/Ver = \"${{steps.release.outputs.tag_name }}\"/g" internal/app/const.go
      - name: Commit Version
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .version internal/app/const.go
          git commit -m "chore: update version in app (${{steps.release.outputs.tag_name }})"
          git push origin ${{ steps.release.outputs.pr['headBranchName'] }}
      - name: Push Artifact
        if: ${{ steps.release.outputs.releases_created }}
        run: gh release upload ${{steps.release.outputs.tag_name }} bin/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
